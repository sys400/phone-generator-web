{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/projects/fill-number-search/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport ExcelDownloads from \"./ExcelDownload\";\nimport \"./App.css\";\nimport UseLocalStorageState from \"./useLocalStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  var _JSON$parse;\n\n  const [phone, setPhone] = useState();\n  const [isLoading, SetIsLoanding] = useState(false);\n  const data = (_JSON$parse = JSON.parse(localStorage.getItem(\"data\"))) !== null && _JSON$parse !== void 0 ? _JSON$parse : [];\n\n  const dataExcel = () => {\n    return data.map((res, index) => {\n      return {\n        id: index,\n        telephone: res\n      };\n    });\n  };\n\n  const handleChange = event => {\n    setPhone(event.target.value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    SetIsLoanding(true);\n    fetch(`http://localhost:90/randomphonenumbers/?phone=${phone}`).then(res => res.json()).then(record => record.result.forEach(ele => UseLocalStorageState(ele)));\n    SetIsLoanding(false);\n  };\n\n  const renderTableData = () => {\n    isLoading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this) : data.map((phone, index) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false);\n    });\n  };\n\n  const dataRender = dataExcel();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Filtro para buscar telefonos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Telefono: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExcelDownloads, {\n        data: dataRender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"phones\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Phone Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: renderTableData()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"5lN+/qXyFa0hBUpfEfmGtKifVPg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/admin/Desktop/projects/fill-number-search/src/App.js"],"names":["useEffect","useState","ExcelDownloads","UseLocalStorageState","App","phone","setPhone","isLoading","SetIsLoanding","data","JSON","parse","localStorage","getItem","dataExcel","map","res","index","id","telephone","handleChange","event","target","value","onSubmit","e","preventDefault","fetch","then","json","record","result","forEach","ele","renderTableData","dataRender"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport ExcelDownloads from \"./ExcelDownload\";\n\nimport \"./App.css\";\nimport UseLocalStorageState from \"./useLocalStorage\";\n\nconst App = () => {\n  const [phone, setPhone] = useState();\n  const [isLoading, SetIsLoanding] = useState(false);\n  const data = JSON.parse(localStorage.getItem(\"data\")) ?? [];\n\n  const dataExcel = () => {\n    return data.map((res, index) => {\n      return {\n        id: index,\n        telephone: res,\n      };\n    });\n  };\n  const handleChange = (event) => {\n    setPhone(event.target.value);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    SetIsLoanding(true);\n    fetch(`http://localhost:90/randomphonenumbers/?phone=${phone}`)\n      .then((res) => res.json())\n      .then((record) =>\n        record.result.forEach((ele) => UseLocalStorageState(ele))\n      );\n    SetIsLoanding(false);\n  };\n\n  const renderTableData = () => {\n    isLoading ? (\n      <h1>Cargando...</h1>\n    ) : (\n      data.map((phone, index) => {\n        return (\n          <>\n            <tr key={index}>\n              <td>{index + 1}</td>\n              <td>{phone}</td>\n            </tr>\n          </>\n        );\n      })\n    );\n  };\n\n  const dataRender = dataExcel();\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Filtro para buscar telefonos</h1>\n        <form onSubmit={onSubmit}>\n          <label>Telefono: </label>\n          <input type=\"number\" onChange={handleChange} />\n          <input type=\"submit\" />\n        </form>\n        <ExcelDownloads data={dataRender} />\n        <table id=\"phones\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Phone Number</th>\n            </tr>\n          </thead>\n          <tbody>{renderTableData()}</tbody>\n        </table>\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}